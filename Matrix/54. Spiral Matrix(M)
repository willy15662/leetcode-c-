class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int up = 0, left = 0;
        int right = matrix[0].size() - 1;
        int down = matrix.size() - 1;
        int way = 1; // 1: right, 2: down, 3: left, 4: up
        vector<int> output;

        int i = 0, j = 0;
        while (up <= down && left <= right) {
            if (way == 1) {  // 往右
                while (i <= right) output.push_back(matrix[j][i++]);
                i--; j++; up++;  // 調整邊界
            }
            else if (way == 2) {  // 往下
                while (j <= down) output.push_back(matrix[j++][i]);
                j--; i--; right--;  // 調整邊界
            }
            else if (way == 3) {  // 往左
                while (i >= left) output.push_back(matrix[j][i--]);
                i++; j--; down--;  // 調整邊界
            }
            else {  // 往上
                while (j >= up) output.push_back(matrix[j--][i]);
                j++; i++; left++;  // 調整邊界
            }
            way = (way % 4) + 1; 
        }
        return output;
    }
};
